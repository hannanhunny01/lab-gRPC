// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: helloworld.proto
// Protobuf C++ Version: 5.27.2

#ifndef GOOGLE_PROTOBUF_INCLUDED_helloworld_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_helloworld_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 5027002
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_bases.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_helloworld_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_helloworld_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_helloworld_2eproto;
namespace helloworld {
class AddWordRequest;
struct AddWordRequestDefaultTypeInternal;
extern AddWordRequestDefaultTypeInternal _AddWordRequest_default_instance_;
class AddWordResponse;
struct AddWordResponseDefaultTypeInternal;
extern AddWordResponseDefaultTypeInternal _AddWordResponse_default_instance_;
class GetWordsRequest;
struct GetWordsRequestDefaultTypeInternal;
extern GetWordsRequestDefaultTypeInternal _GetWordsRequest_default_instance_;
class GetWordsResponse;
struct GetWordsResponseDefaultTypeInternal;
extern GetWordsResponseDefaultTypeInternal _GetWordsResponse_default_instance_;
}  // namespace helloworld
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace helloworld {

// ===================================================================


// -------------------------------------------------------------------

class GetWordsResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:helloworld.GetWordsResponse) */ {
 public:
  inline GetWordsResponse() : GetWordsResponse(nullptr) {}
  ~GetWordsResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetWordsResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetWordsResponse(const GetWordsResponse& from) : GetWordsResponse(nullptr, from) {}
  inline GetWordsResponse(GetWordsResponse&& from) noexcept
      : GetWordsResponse(nullptr, std::move(from)) {}
  inline GetWordsResponse& operator=(const GetWordsResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetWordsResponse& operator=(GetWordsResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetWordsResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetWordsResponse* internal_default_instance() {
    return reinterpret_cast<const GetWordsResponse*>(
        &_GetWordsResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(GetWordsResponse& a, GetWordsResponse& b) { a.Swap(&b); }
  inline void Swap(GetWordsResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetWordsResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetWordsResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<GetWordsResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const GetWordsResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const GetWordsResponse& from) { GetWordsResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(GetWordsResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "helloworld.GetWordsResponse"; }

 protected:
  explicit GetWordsResponse(::google::protobuf::Arena* arena);
  GetWordsResponse(::google::protobuf::Arena* arena, const GetWordsResponse& from);
  GetWordsResponse(::google::protobuf::Arena* arena, GetWordsResponse&& from) noexcept
      : GetWordsResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWordsFieldNumber = 1,
  };
  // repeated string words = 1;
  int words_size() const;
  private:
  int _internal_words_size() const;

  public:
  void clear_words() ;
  const std::string& words(int index) const;
  std::string* mutable_words(int index);
  void set_words(int index, const std::string& value);
  void set_words(int index, std::string&& value);
  void set_words(int index, const char* value);
  void set_words(int index, const char* value, std::size_t size);
  void set_words(int index, absl::string_view value);
  std::string* add_words();
  void add_words(const std::string& value);
  void add_words(std::string&& value);
  void add_words(const char* value);
  void add_words(const char* value, std::size_t size);
  void add_words(absl::string_view value);
  const ::google::protobuf::RepeatedPtrField<std::string>& words() const;
  ::google::protobuf::RepeatedPtrField<std::string>* mutable_words();

  private:
  const ::google::protobuf::RepeatedPtrField<std::string>& _internal_words() const;
  ::google::protobuf::RepeatedPtrField<std::string>* _internal_mutable_words();

  public:
  // @@protoc_insertion_point(class_scope:helloworld.GetWordsResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      41, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetWordsResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetWordsResponse& from_msg);
    ::google::protobuf::RepeatedPtrField<std::string> words_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_helloworld_2eproto;
};
// -------------------------------------------------------------------

class GetWordsRequest final : public ::google::protobuf::internal::ZeroFieldsBase
/* @@protoc_insertion_point(class_definition:helloworld.GetWordsRequest) */ {
 public:
  inline GetWordsRequest() : GetWordsRequest(nullptr) {}
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR GetWordsRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline GetWordsRequest(const GetWordsRequest& from) : GetWordsRequest(nullptr, from) {}
  inline GetWordsRequest(GetWordsRequest&& from) noexcept
      : GetWordsRequest(nullptr, std::move(from)) {}
  inline GetWordsRequest& operator=(const GetWordsRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline GetWordsRequest& operator=(GetWordsRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const GetWordsRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const GetWordsRequest* internal_default_instance() {
    return reinterpret_cast<const GetWordsRequest*>(
        &_GetWordsRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(GetWordsRequest& a, GetWordsRequest& b) { a.Swap(&b); }
  inline void Swap(GetWordsRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(GetWordsRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  GetWordsRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::internal::ZeroFieldsBase::DefaultConstruct<GetWordsRequest>(arena);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::CopyFrom;
  inline void CopyFrom(const GetWordsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::CopyImpl(*this, from);
  }
  using ::google::protobuf::internal::ZeroFieldsBase::MergeFrom;
  void MergeFrom(const GetWordsRequest& from) {
    ::google::protobuf::internal::ZeroFieldsBase::MergeImpl(*this, from);
  }

  public:
  bool IsInitialized() const {
    return true;
  }
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "helloworld.GetWordsRequest"; }

 protected:
  explicit GetWordsRequest(::google::protobuf::Arena* arena);
  GetWordsRequest(::google::protobuf::Arena* arena, const GetWordsRequest& from);
  GetWordsRequest(::google::protobuf::Arena* arena, GetWordsRequest&& from) noexcept
      : GetWordsRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ZeroFieldsBase::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  // @@protoc_insertion_point(class_scope:helloworld.GetWordsRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 0, 0,
      0, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_GetWordsRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const GetWordsRequest& from_msg);
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  friend struct ::TableStruct_helloworld_2eproto;
};
// -------------------------------------------------------------------

class AddWordResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:helloworld.AddWordResponse) */ {
 public:
  inline AddWordResponse() : AddWordResponse(nullptr) {}
  ~AddWordResponse() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddWordResponse(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddWordResponse(const AddWordResponse& from) : AddWordResponse(nullptr, from) {}
  inline AddWordResponse(AddWordResponse&& from) noexcept
      : AddWordResponse(nullptr, std::move(from)) {}
  inline AddWordResponse& operator=(const AddWordResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddWordResponse& operator=(AddWordResponse&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddWordResponse& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddWordResponse* internal_default_instance() {
    return reinterpret_cast<const AddWordResponse*>(
        &_AddWordResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(AddWordResponse& a, AddWordResponse& b) { a.Swap(&b); }
  inline void Swap(AddWordResponse* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddWordResponse* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddWordResponse* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AddWordResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddWordResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddWordResponse& from) { AddWordResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AddWordResponse* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "helloworld.AddWordResponse"; }

 protected:
  explicit AddWordResponse(::google::protobuf::Arena* arena);
  AddWordResponse(::google::protobuf::Arena* arena, const AddWordResponse& from);
  AddWordResponse(::google::protobuf::Arena* arena, AddWordResponse&& from) noexcept
      : AddWordResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kMessageFieldNumber = 1,
  };
  // string message = 1;
  void clear_message() ;
  const std::string& message() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_message(Arg_&& arg, Args_... args);
  std::string* mutable_message();
  PROTOBUF_NODISCARD std::string* release_message();
  void set_allocated_message(std::string* value);

  private:
  const std::string& _internal_message() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_message(
      const std::string& value);
  std::string* _internal_mutable_message();

  public:
  // @@protoc_insertion_point(class_scope:helloworld.AddWordResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      42, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AddWordResponse_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddWordResponse& from_msg);
    ::google::protobuf::internal::ArenaStringPtr message_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_helloworld_2eproto;
};
// -------------------------------------------------------------------

class AddWordRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:helloworld.AddWordRequest) */ {
 public:
  inline AddWordRequest() : AddWordRequest(nullptr) {}
  ~AddWordRequest() override;
  template <typename = void>
  explicit PROTOBUF_CONSTEXPR AddWordRequest(
      ::google::protobuf::internal::ConstantInitialized);

  inline AddWordRequest(const AddWordRequest& from) : AddWordRequest(nullptr, from) {}
  inline AddWordRequest(AddWordRequest&& from) noexcept
      : AddWordRequest(nullptr, std::move(from)) {}
  inline AddWordRequest& operator=(const AddWordRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline AddWordRequest& operator=(AddWordRequest&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
#ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
#endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const AddWordRequest& default_instance() {
    return *internal_default_instance();
  }
  static inline const AddWordRequest* internal_default_instance() {
    return reinterpret_cast<const AddWordRequest*>(
        &_AddWordRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(AddWordRequest& a, AddWordRequest& b) { a.Swap(&b); }
  inline void Swap(AddWordRequest* other) {
    if (other == this) return;
#ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr && GetArena() == other->GetArena()) {
#else   // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
#endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(AddWordRequest* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  AddWordRequest* New(::google::protobuf::Arena* arena = nullptr) const final {
    return ::google::protobuf::Message::DefaultConstruct<AddWordRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const AddWordRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const AddWordRequest& from) { AddWordRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(
      ::google::protobuf::MessageLite& to_msg,
      const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() final;
  ::size_t ByteSizeLong() const final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target,
      ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(AddWordRequest* other);
 private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() { return "helloworld.AddWordRequest"; }

 protected:
  explicit AddWordRequest(::google::protobuf::Arena* arena);
  AddWordRequest(::google::protobuf::Arena* arena, const AddWordRequest& from);
  AddWordRequest(::google::protobuf::Arena* arena, AddWordRequest&& from) noexcept
      : AddWordRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::Message::ClassData* GetClassData() const final;

 public:
  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kWordFieldNumber = 1,
  };
  // string word = 1;
  void clear_word() ;
  const std::string& word() const;
  template <typename Arg_ = const std::string&, typename... Args_>
  void set_word(Arg_&& arg, Args_... args);
  std::string* mutable_word();
  PROTOBUF_NODISCARD std::string* release_word();
  void set_allocated_word(std::string* value);

  private:
  const std::string& _internal_word() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_word(
      const std::string& value);
  std::string* _internal_mutable_word();

  public:
  // @@protoc_insertion_point(class_scope:helloworld.AddWordRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      0, 1, 0,
      38, 2>
      _table_;

  static constexpr const void* _raw_default_instance_ =
      &_AddWordRequest_default_instance_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(
        ::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena);
    inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                          ::google::protobuf::Arena* arena, const Impl_& from,
                          const AddWordRequest& from_msg);
    ::google::protobuf::internal::ArenaStringPtr word_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_helloworld_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// AddWordRequest

// string word = 1;
inline void AddWordRequest::clear_word() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.word_.ClearToEmpty();
}
inline const std::string& AddWordRequest::word() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:helloworld.AddWordRequest.word)
  return _internal_word();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddWordRequest::set_word(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.word_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:helloworld.AddWordRequest.word)
}
inline std::string* AddWordRequest::mutable_word() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_word();
  // @@protoc_insertion_point(field_mutable:helloworld.AddWordRequest.word)
  return _s;
}
inline const std::string& AddWordRequest::_internal_word() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.word_.Get();
}
inline void AddWordRequest::_internal_set_word(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.word_.Set(value, GetArena());
}
inline std::string* AddWordRequest::_internal_mutable_word() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.word_.Mutable( GetArena());
}
inline std::string* AddWordRequest::release_word() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:helloworld.AddWordRequest.word)
  return _impl_.word_.Release();
}
inline void AddWordRequest::set_allocated_word(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.word_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.word_.IsDefault()) {
          _impl_.word_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:helloworld.AddWordRequest.word)
}

// -------------------------------------------------------------------

// AddWordResponse

// string message = 1;
inline void AddWordResponse::clear_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.ClearToEmpty();
}
inline const std::string& AddWordResponse::message() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:helloworld.AddWordResponse.message)
  return _internal_message();
}
template <typename Arg_, typename... Args_>
inline PROTOBUF_ALWAYS_INLINE void AddWordResponse::set_message(Arg_&& arg,
                                                     Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:helloworld.AddWordResponse.message)
}
inline std::string* AddWordResponse::mutable_message() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  std::string* _s = _internal_mutable_message();
  // @@protoc_insertion_point(field_mutable:helloworld.AddWordResponse.message)
  return _s;
}
inline const std::string& AddWordResponse::_internal_message() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.message_.Get();
}
inline void AddWordResponse::_internal_set_message(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.Set(value, GetArena());
}
inline std::string* AddWordResponse::_internal_mutable_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _impl_.message_.Mutable( GetArena());
}
inline std::string* AddWordResponse::release_message() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:helloworld.AddWordResponse.message)
  return _impl_.message_.Release();
}
inline void AddWordResponse::set_allocated_message(std::string* value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.message_.SetAllocated(value, GetArena());
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
        if (_impl_.message_.IsDefault()) {
          _impl_.message_.Set("", GetArena());
        }
  #endif  // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:helloworld.AddWordResponse.message)
}

// -------------------------------------------------------------------

// GetWordsRequest

// -------------------------------------------------------------------

// GetWordsResponse

// repeated string words = 1;
inline int GetWordsResponse::_internal_words_size() const {
  return _internal_words().size();
}
inline int GetWordsResponse::words_size() const {
  return _internal_words_size();
}
inline void GetWordsResponse::clear_words() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.words_.Clear();
}
inline std::string* GetWordsResponse::add_words()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  std::string* _s = _internal_mutable_words()->Add();
  // @@protoc_insertion_point(field_add_mutable:helloworld.GetWordsResponse.words)
  return _s;
}
inline const std::string& GetWordsResponse::words(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:helloworld.GetWordsResponse.words)
  return _internal_words().Get(index);
}
inline std::string* GetWordsResponse::mutable_words(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:helloworld.GetWordsResponse.words)
  return _internal_mutable_words()->Mutable(index);
}
inline void GetWordsResponse::set_words(int index, const std::string& value) {
  _internal_mutable_words()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set:helloworld.GetWordsResponse.words)
}
inline void GetWordsResponse::set_words(int index, std::string&& value) {
  _internal_mutable_words()->Mutable(index)->assign(std::move(value));
  // @@protoc_insertion_point(field_set:helloworld.GetWordsResponse.words)
}
inline void GetWordsResponse::set_words(int index, const char* value) {
  ABSL_DCHECK(value != nullptr);
  _internal_mutable_words()->Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:helloworld.GetWordsResponse.words)
}
inline void GetWordsResponse::set_words(int index, const char* value,
                              std::size_t size) {
  _internal_mutable_words()->Mutable(index)->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:helloworld.GetWordsResponse.words)
}
inline void GetWordsResponse::set_words(int index, absl::string_view value) {
  _internal_mutable_words()->Mutable(index)->assign(
      value.data(), value.size());
  // @@protoc_insertion_point(field_set_string_piece:helloworld.GetWordsResponse.words)
}
inline void GetWordsResponse::add_words(const std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_words()->Add()->assign(value);
  // @@protoc_insertion_point(field_add:helloworld.GetWordsResponse.words)
}
inline void GetWordsResponse::add_words(std::string&& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_words()->Add(std::move(value));
  // @@protoc_insertion_point(field_add:helloworld.GetWordsResponse.words)
}
inline void GetWordsResponse::add_words(const char* value) {
  ABSL_DCHECK(value != nullptr);
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_words()->Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:helloworld.GetWordsResponse.words)
}
inline void GetWordsResponse::add_words(const char* value, std::size_t size) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_words()->Add()->assign(
      reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:helloworld.GetWordsResponse.words)
}
inline void GetWordsResponse::add_words(absl::string_view value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _internal_mutable_words()->Add()->assign(value.data(),
                                                     value.size());
  // @@protoc_insertion_point(field_add_string_piece:helloworld.GetWordsResponse.words)
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetWordsResponse::words() const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:helloworld.GetWordsResponse.words)
  return _internal_words();
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetWordsResponse::mutable_words() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:helloworld.GetWordsResponse.words)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_words();
}
inline const ::google::protobuf::RepeatedPtrField<std::string>&
GetWordsResponse::_internal_words() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.words_;
}
inline ::google::protobuf::RepeatedPtrField<std::string>*
GetWordsResponse::_internal_mutable_words() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.words_;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace helloworld


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_helloworld_2eproto_2epb_2eh
